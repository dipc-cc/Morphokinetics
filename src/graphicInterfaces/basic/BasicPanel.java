/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * dibujaKMC.java
 *
 * Created on 31-ene-2012, 12:47:47
 */
package graphicInterfaces.basic;

import kineticMonteCarlo.atom.BasicAtom;
import kineticMonteCarlo.kmcCore.AbstractKmc;
import kineticMonteCarlo.kmcCore.etching.BasicKmc;
import java.awt.Color;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Paint;
import java.awt.Point;

/**
 *
 * 
 */
public class BasicPanel extends javax.swing.JPanel {

    
    private BasicKmc kmc;
    
    private GradientPaint gradientPaint_bulk; 
    private GradientPaint gradientPaint_etched;
    private int zoom=1;
    
    /** Creates new form dibujaKMC */
    public BasicPanel(int zoom) {
        initComponents();
        this.zoom=zoom;
       
    }

    
    public void setKMC(BasicKmc kmc){
        this.kmc=kmc;
        
         gradientPaint_etched= new GradientPaint(new Point (0,0), Color.black, new Point (0,kmc.getLattice().getSizeY()), Color.gray.darker(), false);
         gradientPaint_bulk=   new GradientPaint(new Point (0,0), Color.white, new Point (0,kmc.getLattice().getSizeY()), Color.gray.brighter(), false);
        
    }
    
    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        if (this.kmc==null) return;
        int sizeX=kmc.getLattice().getSizeX();
        int sizeY=kmc.getLattice().getSizeY();
        
        Paint defaultPaint=((Graphics2D)g).getPaint();

        for (int i=0;i<sizeX;i++){             
            for (int j=0;j<sizeY;j++){         
      
            BasicAtom atom=(BasicAtom)kmc.getLattice().getAtom(i, j, 0, 0);
             byte type=atom.getType();  
             
            if (atom.isRemoved()) {
                ((Graphics2D)g).setPaint(gradientPaint_etched);}
            else{
                switch (type){
                    case 0:         ((Graphics2D)g).setPaint(gradientPaint_etched);   break;
                    case 1:         g.setColor(Color.BLUE);                         break;
                    case 2:         g.setColor(Color.GREEN);                        break;
                    case 3:         g.setColor(Color.RED);                          break;
                    case 4:         ((Graphics2D)g).setPaint(gradientPaint_bulk);   break;
                }
            }
            
        g.fillRect(i*zoom, j*zoom, zoom, zoom);
        
         if (type==4)  ((Graphics2D)g).setPaint(defaultPaint);   
        
        }}   
    g.dispose();
    }
    
    
    
    
    
    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
    this.setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 604, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 976, Short.MAX_VALUE)
    );
  }// </editor-fold>//GEN-END:initComponents
  // Variables declaration - do not modify//GEN-BEGIN:variables
  // End of variables declaration//GEN-END:variables
}
