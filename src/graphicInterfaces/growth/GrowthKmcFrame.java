/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewJFrame.java
 *
 * Created on 31-ene-2012, 13:09:43
 */
package graphicInterfaces.growth;

import javax.swing.JButton;
import javax.swing.JScrollPane;
import javax.swing.JToggleButton;

public class GrowthKmcFrame extends javax.swing.JFrame {

  private int mouseX, mouseY;
  private int startMouseX = 0;
  private int startMouseY = 0;
  private KmcCanvas canvas1;
  private JButton pauseButton;
  private JToggleButton bwButton;

  /**
   * Creates new form NewJFrame
   *
   * @param canvas1
   */
  public GrowthKmcFrame(KmcCanvas canvas1) {

    initComponents();
    this.canvas1 = canvas1;
    canvas1.setSize(canvas1.getSizeX(), canvas1.getSizeY());
    jPanel1.add(canvas1);
    canvas1.initialise();
    jSpinnerScale.setValue(((KmcCanvas) canvas1).getScale());
    setResizable(true);
    setSize(canvas1.getSizeX() + 50, canvas1.getSizeY() + 100);

    canvas1.addMouseListener(new java.awt.event.MouseAdapter() {
      @Override
      public void mouseReleased(java.awt.event.MouseEvent evt) {
        jPanel1MouseReleased(evt);
      }

      @Override
      public void mousePressed(java.awt.event.MouseEvent evt) {
        jPanel1MousePressed(evt);
      }
    });
    canvas1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
      @Override
      public void mouseDragged(java.awt.event.MouseEvent evt) {
        jPanel1MouseDragged(evt);
      }
    });
  }

  public void repaintKmc() {
    canvas1.performDraw();
    canvas1.setBaseLocation(mouseX, mouseY);
    mouseX = 0;
    mouseY = 0;
  }

  /**
   * Prints the current canvas to a png image in folder $PWD/results
   * @param i simulation number
   */
  public void printToImage(int i) {
    canvas1.performDrawToImage(i);
  }

  /**
   * Prints the current canvas to a png image in folder $PWD/folder/results
   * @param folder folder to save the current image
   * @param i simulation number
   */
  public void printToImage(String folder, int i) {
    canvas1.performDrawToImage(folder, i);
  }

  /**
   * This method is called from within the constructor to initialize the form. WARNING: Do NOT
   * modify this code. The content of this method is always regenerated by the Form Editor.
   */
  private void initComponents() {
    jLabelScale = new javax.swing.JLabel();
    jSpinnerScale = new javax.swing.JSpinner();
    jPanel1 = new javax.swing.JPanel();
    pauseButton = new javax.swing.JButton();
    bwButton = new javax.swing.JToggleButton("B/W");

    JScrollPane scrollPane = new javax.swing.JScrollPane(jPanel1);
    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setTitle("Morphoniketics");
    setResizable(false);

    jLabelScale.setText("Scale");
    pauseButton.setText("Pause");

    jSpinnerScale.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(1), Integer.valueOf(1), null, Integer.valueOf(1)));
    jSpinnerScale.setFocusCycleRoot(true);
    jSpinnerScale.setFocusable(false);
    jSpinnerScale.addChangeListener(new javax.swing.event.ChangeListener() {
      @Override
      public void stateChanged(javax.swing.event.ChangeEvent evt) {
        jSpinnerScaleStateChanged(evt);
      }
    });

    jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
      @Override
      public void mouseDragged(java.awt.event.MouseEvent evt) {
        jPanel1MouseDragged(evt);
      }
    });
    jPanel1.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
      @Override
      public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
        jPanel1MouseWheelMoved(evt);
      }
    });
    jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
      @Override
      public void mousePressed(java.awt.event.MouseEvent evt) {
        jPanel1MousePressed(evt);
      }
      @Override
      public void mouseReleased(java.awt.event.MouseEvent evt) {
        jPanel1MouseReleased(evt);
      }
    });
    pauseButton.addActionListener(new java.awt.event.ActionListener() {
      @Override
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        pauseButton.setText("Resume");
        System.out.println("Button pressed");
      }
    });
    bwButton.addActionListener(new java.awt.event.ActionListener() {
      @Override
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        System.out.println("Other Button pressed");
        canvas1.changeBlackAndWhite();
      }
    });
      

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
          .addGroup(layout.createSequentialGroup()
            .addComponent(jLabelScale)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jSpinnerScale, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
		    .addComponent(pauseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, 80)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
		    .addComponent(bwButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, 80)
            .addGap(0, 0, Short.MAX_VALUE)))
        .addContainerGap())
    );
    layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelScale)
                            .addComponent(pauseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bwButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jSpinnerScale, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(scrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addContainerGap())
    );
    
    pack();
  }// </editor-fold>                        

    private void jSpinnerScaleStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSpinnerScaleStateChanged
      canvas1.setScale((Integer) jSpinnerScale.getValue());
      canvas1.setSize(canvas1.getSizeX(), canvas1.getSizeY());
      setSize(canvas1.getSizeX() + 50, canvas1.getSizeY() + 100);
    }//GEN-LAST:event_jSpinnerScaleStateChanged

    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
      startMouseX = evt.getX();
      startMouseY = evt.getY();        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1MousePressed

    private void jPanel1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseReleased
      if (evt.getX() == startMouseX && evt.getY() == startMouseY) {
        canvas1.changeOccupationByHand(startMouseX, startMouseY);
      }
    }//GEN-LAST:event_jPanel1MouseReleased

    private void jPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseDragged
        
    }//GEN-LAST:event_jPanel1MouseDragged

  private void jPanel1MouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_jPanel1MouseWheelMoved

    int zoom = (Integer) jSpinnerScale.getValue();
    if ((Integer) evt.getWheelRotation() == -1) {
      zoom *=2;
    } else {
      zoom /=2;
    }
    if (zoom <= 0) {
      zoom = 1;
    }
    if (zoom >= 32) {
      zoom = 32;
    }
    jSpinnerScale.setValue(zoom);
    canvas1.setScale(zoom);
    canvas1.setSize(canvas1.getSizeX(), canvas1.getSizeY());
    setSize(canvas1.getSizeX() + 50, canvas1.getSizeY() + 100);
  }//GEN-LAST:event_jPanel1MouseWheelMoved

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel jLabelScale;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JSpinner jSpinnerScale;
  // End of variables declaration//GEN-END:variables
}
